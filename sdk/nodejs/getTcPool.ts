// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to get detailed information of Traffic Controller (TC) pool records.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ultradns from "@pulumi/ultradns";
 *
 * const tcpool = pulumi.output(ultradns.getTcPool({
 *     ownerName: "www",
 *     recordType: "A",
 *     zoneName: "example.com.",
 * }));
 * ```
 */
export function getTcPool(args: GetTcPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetTcPoolResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("ultradns:index/getTcPool:getTcPool", {
        "ownerName": args.ownerName,
        "recordType": args.recordType,
        "zoneName": args.zoneName,
    }, opts);
}

/**
 * A collection of arguments for invoking getTcPool.
 */
export interface GetTcPoolArgs {
    /**
     * (String) The domain name of the owner of the RRSet. Can be either a fully qualified domain name (FQDN) or a relative domain name. If provided as a FQDN, it must be contained within the zone name's FQDN.
     */
    ownerName: string;
    /**
     * (String) Must be formatted as a well-known resource record type (A), or the corresponding number for the type (1).<br/>
     * Below are the supported resource record types with the corresponding number:<br/>
     * `A (1)`
     */
    recordType: string;
    /**
     * (String) Name of the zone.
     */
    zoneName: string;
}

/**
 * A collection of values returned by getTcPool.
 */
export interface GetTcPoolResult {
    /**
     * (Computed) (Boolean) Indicates whether or not pool records will be enabled (true) or disabled (false) when probes are run.
     */
    readonly actOnProbes: boolean;
    /**
     * (Computed) (Block Set, Max: 1) Nested block describing the information of the backup record for the Traffic Controller pool. The backup record is served if all other records fail. There can be one or more A records used as backup records, or a single CNAME record. The structure of this block is described below.
     */
    readonly backupRecords: outputs.GetTcPoolBackupRecord[];
    /**
     * (Computed) (Integer) The minimum number of records that must fail for a pool to be labeled 'FAILED'. If the number of failed records in the pool is greater than or equal to the 'Failure Threshold' value, the pool will be labeled FAILED.<br/>
     * For example, a pool with six priority records, one all-fail record, and the Failure Threshold value is set to four (4). If four or more priority records are not available to serve, the pool will be labeled FAILED, and the all-fail record will be served.
     */
    readonly failureThreshold: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (Computed) (Integer) Specifies the maximum number of active servers in a pool. The maximum value is the number of pool records.
     */
    readonly maxToLb: number;
    readonly ownerName: string;
    /**
     * (Computed) (String) An optional description of the Traffic Controller (TC) field.
     */
    readonly poolDescription: string;
    /**
     * (Computed) (Block Set) List of nested blocks describing the pool records. The structure of this block is described below.
     */
    readonly rdataInfos: outputs.GetTcPoolRdataInfo[];
    readonly recordType: string;
    /**
     * (Computed) (Boolean) Indicates whether or not probes are run for this pool record.
     */
    readonly runProbes: boolean;
    /**
     * (Computed) (String)  Current status of the serving record. Valid values are:</br>
     * `OK`- If the number of records serving is equal to the Max Active value, and all the active records are top priority records.</br>
     * For example, if a pool has a Max Active of 1 and the Priority 1 record is serving.</br>
     * `WARNING` – If the number of records serving is equal to the Max Active value, and the active records are not top priority records.</br>
     * For example, if a pool has a Max Active of 1 and the Priority 1 records is not serving and the Priority 2 record is serving.</br>
     * `CRITICAL` – If the number of records serving is less than the Max Active value, or the All Fail record is being served.</br>
     * For example, if a pool has a Max Active of 2, and only one record is serving.</br>
     * `FAILED` - If the FailureThreshold value is 0 or null, and no records are serving, and there is no All Fail record configured.</br>OR</br>If the number of priority records not available to serve equals or exceeds the FailureThreshold’s value.</br>
     * For example, if the Failure Threshold value is 3, and there are 3 or more Priority Records that are not available to serve.
     */
    readonly status: string;
    /**
     * (Computed) (Integer) The time to live (in seconds) for the record. Must be a value between 0 and 2147483647, inclusive.
     */
    readonly ttl: number;
    readonly zoneName: string;
}

export function getTcPoolOutput(args: GetTcPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTcPoolResult> {
    return pulumi.output(args).apply(a => getTcPool(a, opts))
}

/**
 * A collection of arguments for invoking getTcPool.
 */
export interface GetTcPoolOutputArgs {
    /**
     * (String) The domain name of the owner of the RRSet. Can be either a fully qualified domain name (FQDN) or a relative domain name. If provided as a FQDN, it must be contained within the zone name's FQDN.
     */
    ownerName: pulumi.Input<string>;
    /**
     * (String) Must be formatted as a well-known resource record type (A), or the corresponding number for the type (1).<br/>
     * Below are the supported resource record types with the corresponding number:<br/>
     * `A (1)`
     */
    recordType: pulumi.Input<string>;
    /**
     * (String) Name of the zone.
     */
    zoneName: pulumi.Input<string>;
}
